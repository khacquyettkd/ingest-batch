const { z } = require("zod");
import type { z as ZodNamespace } from "zod";

const InverterSungrowColumns = z.object({
    "time": z.string(),
    "name": z.string(),
    "ip": z.string(),
    "status": z.union([z.literal(0), z.literal(1), z.literal(2), z.literal(3)]),
    "serial": z.string(),
    "ac_current": z.number(),
    "phase_a_current": z.number(),
    "phase_b_current": z.number(),
    "phase_c_current": z.number(),
    "phase_voltage_ab": z.number(),
    "phase_voltage_bc": z.number(),
    "phase_voltage_ca": z.number(),
    "phase_voltage_an": z.number(),
    "phase_voltage_bn": z.number(),
    "phase_voltage_cn": z.number(),
    "ac_power": z.number(),
    "line_frequency": z.number(),
    "ac_energy": z.number(),
    "dc_current": z.number(),
    "dc_voltage": z.number(),
    "dc_power": z.number(),
    "cabinet_temperature": z.number(),
    "operating_state": z.number(),
    "vendor_operating_state": z.number(),
    "mppt1_voltage": z.number(),
    "mppt2_voltage": z.number(),
    "mppt3_voltage": z.number(),
    "mppt4_voltage": z.number(),
    "mppt5_voltage": z.number(),
    "mppt6_voltage": z.number(),
    "mppt7_voltage": z.number(),
    "mppt8_voltage": z.number(),
    "mppt9_voltage": z.number(),
    "mppt10_voltage": z.number(),
    "mppt11_voltage": z.number(),
    "mppt12_voltage": z.number(),
    "mppt1_current": z.number(),
    "mppt2_current": z.number(),
    "mppt3_current": z.number(),
    "mppt4_current": z.number(),
    "mppt5_current": z.number(),
    "mppt6_current": z.number(),
    "mppt7_current": z.number(),
    "mppt8_current": z.number(),
    "mppt9_current": z.number(),
    "mppt10_current": z.number(),
    "mppt11_current": z.number(),
    "mppt12_current": z.number(),
    "string1_current": z.number(),
    "string2_current": z.number(),
    "string3_current": z.number(),
    "string4_current": z.number(),
    "string5_current": z.number(),
    "string6_current": z.number(),
    "string7_current": z.number(),
    "string8_current": z.number(),
    "string9_current": z.number(),
    "string10_current": z.number(),
    "string11_current": z.number(),
    "string12_current": z.number(),
    "string13_current": z.number(),
    "string14_current": z.number(),
    "string15_current": z.number(),
    "string16_current": z.number(),
    "string17_current": z.number(),
    "string18_current": z.number(),
    "string19_current": z.number(),
    "string20_current": z.number(),
    "string21_current": z.number(),
    "string22_current": z.number(),
    "string23_current": z.number(),
    "string24_current": z.number(),
    "is_stored": z.union([z.literal(0), z.literal(1)]),
    "power_limit_external": z.number(),
    "power_limit_enable": z.union([z.literal(0), z.literal(1)]),
    "grid_connection": z.number()
});
type InverterSungrowData = ZodNamespace.infer<typeof InverterSungrowColumns>;

module.exports = { InverterSungrowColumns }
export type { InverterSungrowData }
